<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supervisions.modules.dev.dao.IDeviceinfoDao">

    <resultMap type="Deviceinfo" id="DeviceinfoResult">
        <id     property="id"	column="id"	/>
        <result property="createTime"	column="create_time"	/>
        <result property="createUser"	column="create_user"	/>
        <result property="updateTime"	column="update_time"	/>
        <result property="updateUser"	column="update_user"	/>
        <result property="status"	column="status"	/>
        <result property="version"	column="version"	/>
        <result property="deviceSn"	column="device_sn"	/>
        <result property="type"	column="type"	/>
        <result property="deviceId"	column="device_id"	/>
        <result property="merchantId"	column="merchant_id"	/>
        <result property="merchantAddressId"	column="merchant_address_id"	/>
        <result property="lonLat"	column="lon_lat"	/>
        <result property="isActivated"	column="is_activated"	/>
        <result property="remark"	column="remark"	/>
        <result property="deviceUnique"	column="device_unique"	/>
        <result property="devicePublickey"	column="device_publickey"	/>
        </resultMap>

    <select id="selectDeviceinfoList" parameterType="Deviceinfo" resultMap="DeviceinfoResult">
        select id,create_time,create_user,status,version,device_sn,type,is_activated,remark,device_id,merchant_id,merchant_address_id, (select d.name from dev_device d where d.id = device_id) deviceName, (select m.name from mer_merchant m where m.id = merchant_id) merchantName, (select ma.name from mer_merchant_address ma where ma.id = merchant_address_id) merchantAddressName from dev_device_info
        <where>
            <if test="searchValue != null and searchValue != ''">
                <bind name="bindSearchValue" value="'%' + searchValue + '%'" />
                AND CONCAT(device_sn) LIKE #{bindSearchValue}
            </if>
        </where>
    </select>

    <select id="selectDeviceinfoById" parameterType="Long" resultMap="DeviceinfoResult">
		select *
		from dev_device_info
		where id = #{id}
	</select>

    <select id="checkNameUnique" parameterType="String" resultMap="DeviceinfoResult">
		select *
		from dev_device_info where device_sn=#{deviceSn}
	</select>

    <delete id="deleteDeviceinfoById" parameterType="Long">
 		delete from dev_device_info where id = #{id}
 	</delete>

    <update id="updateDeviceinfo" parameterType="Deviceinfo">
        update dev_device_info
        <set>
            update_time = #{updateTime},
            update_user = #{updateUser},
            status = #{status},
            device_sn = #{deviceSn},
			type = #{type},
			device_id = #{deviceId},
			merchant_id = #{merchantId},
			merchant_address_id = #{merchantAddressId},
			lon_lat = #{lonLat},
			is_activated = #{isActivated},
			remark = #{remark}
			</set>
        where 1=1
        and id = #{id}
    </update>

    <insert id="insertDeviceinfo" parameterType="Deviceinfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
            select nextval('deviceinfo_id');
        </selectKey>
        insert into dev_device_info(<trim suffixOverrides=",">
        id,
        create_time,
        create_user,
        status,
        device_sn,
        type,
        device_id,
        merchant_id,
        merchant_address_id,
        lon_lat,
        is_activated,
        remark,
        device_unique,
        device_publickey
        </trim>
        )values(<trim suffixOverrides=",">
        #{id},
        #{createTime},
        #{createUser},
        #{status},
		#{deviceSn},
        #{type},
        #{deviceId},
        #{merchantId},
        #{merchantAddressId},
        #{lonLat},
        #{isActivated},
        #{remark},
        #{deviceUnique},
        #{devicePublickey}
        </trim>
        )
    </insert>

</mapper>